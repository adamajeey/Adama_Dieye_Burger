version: '3.8'

services:
    # Service pour l'application Laravel
    app:
        build:
            args:
                user: laraveluser
                uid: 1000
            context: ./  # Contexte pour le build
            dockerfile: Dockerfile
        image: isi-burger
        container_name: isi-burger-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - isi-burger-network
        depends_on:
            - db
        env_file:
            - .env.docker  # Utilise le fichier .env.docker (voir configuration ci-dessous)

    # Serveur web NGINX
    nginx:
        image: nginx:alpine
        container_name: isi-burger-nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www
            - ./docker-config/nginx:/etc/nginx/conf.d/
        networks:
            - isi-burger-network
        depends_on:
            - app

    # Service de base de données MySQL
    db:
        image: mysql:8.0
        container_name: isi-burger-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: burger_db
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"  # Permet les connexions sans mot de passe
        ports:
            - "3308:3306"  # Accès à MySQL depuis l'hôte sur le port 3308
        volumes:
            - isi-burger-data:/var/lib/mysql
        networks:
            - isi-burger-network

    # Service Redis pour la mise en cache
    redis:
        image: redis:alpine
        container_name: isi-burger-redis
        restart: unless-stopped
        networks:
            - isi-burger-network

networks:
    isi-burger-network:
        driver: bridge  # Utilisation du réseau bridge pour une communication interne sécurisée

volumes:
    isi-burger-data:
        driver: local  # Volume local pour la persistance des données MySQL
